https://pypi.org/project/tqdm/

/////////////////////////////////////////////////
// Nesse exemplo vamos criar um codigo que vai // 
// printar uma barra de loading no terminal    //                    
/////////////////////////////////////////////////

>>>pip install tqdm

////////////////////
# Exemplo Simples: #
from tqdm import tqdm
import time

for i in tqdm(range(10)):
    time.sleep(1)

>>>100%|███████████████████████| 10/10 [00:10<00:00,  1.01s/it]

//////////
# Lista: #

lista = [1, 2, 3, 10, 15]

for item in tqdm(lista):
    time.sleep(1)

///////////////
# With loop: #

with tqdm(total=50) as barra_progresso:
    for i in range(10):
        time.sleep(1)
        barra_progresso.update(5)

#####################################
# @29: A base é sempre 100, ele     #
# calcula automatico de acordo com  #
# os argumentos que vc passa        #
#####################################

///////////////////////////////////////////////////////
# Exemplo utilizando em um processo real. Situação:   #
# Temos varios Ceps e queremos processar a informação # 
# com uma barra de progresso utilizando requests:     #  
//////////////////////////////////////////////////////#

//////////////////////////////////////////////
# EX: https://docs.awesomeapi.com.br/api-cep #

import requests

link = 'https://cep.awesomeapi.com.br/json/05424020'
requisicao = requests.get(link)
print(requisicao.json())
>>>{'cep': '05424020', 
    'address_type': 'Rua ...',
    'address_name': 'Carlos ...',  
    'address': 'R Reis ...',
    'state': 'SP', 'district': 'Pinheiros',
    'lat': '-23.57021', 'lng': '-46.69685',
    'city': 'São Paulo',
    'city_ibge': '3550308',
    'ddd': '11'}

/////////////////////////////
# Pegando o parametro City: #

link = 'https://cep.awesomeapi.com.br/json/05424020'
requisicao = requests.get(link)
resposta = requisicao.json()
cidade = resposta['city']

///////////////////////////////////
# Automatizando com progress bar: #////////
# Passo 1: Pegar a lista de Ceps          #
# Passo 2: Pegar as infos de cada Ceps    #
# Passo 3: Verificar se a cidade é do RJ  #
# Passo 4: Retornar o CEP e Bairro        #
///////////////////////////////////////////

caminho = "outros/barra_progresso/ceps.txt"

with open("caminho", "r") as arquivo:
    ceps = arquivo.read()
print(ceps)
>>>Listas de Ceps 

///////////////////////
# 86: Experimente tb: #
ceps = ceps.split("\n") 
print(ceps)             

////////////////////////////////////////
# Agora para finalizar o codigo acima: #

path = "outros/barra_progresso/ceps.txt"

with open(path, "r") as arquivo:
    ceps = arquivo.read()
ceps = ceps.split("\n") 
print(ceps) 

for cep in tqdm(ceps):
    link = f'https://cep.awesomeapi.com.br/json/{cep}'
    requisicao = requests.get(link)
    resposta = requisicao.json()
    cidade = resposta['city']
    bairro = resposta['district']
    if cidade == "Rio de Janeiro":
        print(cep, bairro)

///////////////////////////////////////////////////////////////////////////////////
# 104: para referência, o codigo original era apenas 'for cep in ceps:'           #
# Alternativa: Primeiro a barra de progresso, depois printa todas as informações: #
///////////////////////////////////////////////////////////////////////////////////

path = "outros/barra_progresso/ceps.txt"

with open(path, "r") as arquivo:
    ceps = arquivo.read()
ceps = ceps.split("\n") 
print(ceps) 

enderecos_entrega = []
for cep in tqdm(ceps):
    link = f'https://cep.awesomeapi.com.br/json/{cep}'
    requisicao = requests.get(link)
    resposta = requisicao.json()
    cidade = resposta['city']
    bairro = resposta['district']
    if cidade == "Rio de Janeiro":
        enderecos_entrega.append((cep, bairro))
print(cep, bairro)