body {
  margin: 1.5em;
  font-family: Arial, Helvetica, sans-serif;
}

a {
  text-decoration: none;
  font-size: 1.3rem;
}

.hero-img {
  position: absolute; //Para ficar sempre por cima
  top: 0; //Valor para o position absolute
  left: 0;
  background: url('../images/shoe.jpg');
  background-size: cover; // Evita duplicar a imagem ao dar zoom
  background-position-x: 20%; //Move um pouco a imagem
  background-position-y: 20%;
  width: 100%;
  height: 100vh;
  z-index: -1; //Coloca o objeto por trás ou por cima. Nesse caso vai ficar atrás de ícones
  animation: introLoad 2s forwards; // introLoad é o nome da animation, por 2s, forwards vai rodar 1 só vez.
  // A animação acima vai ser definida em @keyframes bem no final do codigo
  // overflow: hidden;
}

.logo {
  color: white;
  font-weight: bold;
}

nav {
  position: fixed;
  right: 0;
  top: 0;
  background: white;
  height: 100vh;
  width: 50%;
  z-index: 999;
  text-transform: uppercase;
  transform: translateX(100%); 
  transition: transform .5s ease-in-out; //define qual propriedade pode 
  //animar de um ponto para outro. em .5segundos vai animar essa navbar para direita
  
  ul {
    list-style-type: none;
    padding: 0;
    margin-top: 8em;

    a {
      color: black;
      padding: .75em 2em; // 75 Top e Bottom. 2 Left Right
      display: block; // Padding em um link element nao funciona sem display block 

      &:hover { // sass
        background: rgb(179, 179, 179);
      }
    }
  }

  .close {
    float: right;
    margin: 2em;
    width: 2em;
  }

}

header {
  display: flex;
  justify-content: space-between;

  svg {
    width: 2.5em;
    margin-top: -.6em;
    cursor: pointer;
  }
}

h1 {
  font-size: 3rem;
  margin-top: 2em;
  line-height: 3.3rem;
}

.subhead {
  font-size: 1.4rem;
}

section.hero {
  color: white;
  height: 90vh;
  animation: moveDown 1s ease-in-out forwards;
  opacity: 0;

  .down-arrow {
    stroke: white;
    position: absolute;
    bottom: 2em;
    width: 5em;
    animation: moveArrow 1s alternate-reverse infinite; // alt-rev repete back and forward, infinitamente.
    
    path {
      fill: white;
    }
  }
}

.more-info {

  img {
    width: 100%; //responsivo
    object-fit: cover; //evita que o height abaixo redimensione desproporcionalmente
    height: 11em; // porem deixa horrivel em Tablet/Desktop, utilizar Media Query para consertar
  }

  .title {
    font-weight: bold;
    font-size: 1.25rem;
  }
  
  .desc {
    line-height: 1.5rem;
  }
}

.open-nav {
  transform: translateX(0%);
}

// Para checar os px, utilizar o devtools no browser: 
// F12 -> Redimensionar Janela Browser, ja vai aparecer no topo direito
@media only screen and (min-width: 680px) {

  body {
    margin: 1.5em 5em; // 1.5 top + bottom. 5 left + right
    font-family: Arial, Helvetica, sans-serif;
  }

}

@media only screen and (min-width: 920px) {

  .menu {
    display: none;
  }

  nav {
    transform: translate(0); //Aos 920px, vai abrir o menu
    position: unset; // antes era fixed, vai ser uma janelinha agr
    display: block;
    width: auto;
    height: auto; // Preenche de acordo com elementos dentro
    background: none;

    svg.close { // botao 'x' para fechar
      display: none;
    }

    ul {
      display: flex; // de vertical para horizontal
      margin: 0;

      a {
        color: white;
        padding: .5em 1.5em; // .5 top+bot. 1.5 left+right

        &:hover { // Remove o hover FILL e adicionar apenas Underline _ abaixo do link
          background: none;
          text-decoration: underline;
        }
      }
    }
  }

  .hero-img { // Puxa para direita com apenas 50% da img
    left: unset;
    right: 0;
    width: 50%;
    height: 42em;
  }

  .logo {
    color: black;

    span {
      color: red;
    }

  }
  section.hero {
    color: black;
    height: auto;
    width: 40%;
    margin-bottom: 8em;

    svg.down-arrow {
      stroke: black;
      position: unset;

      path { //seta cor preto
        fill: black;
      }
    }
  }

  .feature {
    display: grid;
    grid-template: repeat(2, auto);
    gap: 3em;
    margin-bottom: 8em;

    img {
      width: 25em; //redimensiona imagem
    }

    .content{
      text-align: right;
      width: 25em;
    }
  }

  .feature.left { //classe "feature left" com espaço no html
    grid-template-areas:
      "left right";

    img {
      grid-area: left;
    }

    .content {
      text-align: left;
      width: 25em;
      justify-self: left;
    }
  }
}

@media only screen and (min-width: 1200px) {
  .wrapper {
    width: 1200px;
    margin: 0 auto; // 0 top + bot + left + right. Auto vai centralizar
  }

  .feature {
    gap: 0; // menos espaço entre features
  }
}

// https://bennettfeely.com/clippy/
@keyframes introLoad { // efeito cortina
  from {
    clip-path: polygon(0 0, 100% 0, 100% 0, 0 0);
  }
  to {
    clip-path: polygon(0 0, 100% 0, 100% 100%, 0 100%);
  }
}

@keyframes moveArrow { // efeito da seta flutuar
  from {
    transform: translateY(-30px);
  }
  to {
    transform: translateY(0);
  }
}

@keyframes moveDown { // efeito fade para texto section-hero
  from {
    transform: translateY(-100px);
  }
  to {
    transform: translateY(0);
    opacity: 1;
  }
}

